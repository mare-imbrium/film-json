#!/usr/bin/env bash 
#===============================================================================
#
#          FILE: imtitle.sh
# 
#         USAGE: ./imtitle.sh 
# 
#   DESCRIPTION: 
# 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: YOUR NAME (), 
#  ORGANIZATION: 
#       CREATED: 12/25/2015 11:21
#      REVISION:  2015-12-25 12:57
#===============================================================================

OPT_VERBOSE=
OPT_DEBUG=
_MODE=".mode line"
_HEADER=" OFF "
_COLUMNS='*'
while [[ $1 = -* ]]; do
    case "$1" in
    --brief)
        _COLUMNS=" title, year, director, actors"
        shift
        ;;
    --header)
        shift
        # on or off
        _HEADER="$1"
        shift
        ;;
    --mode)
        shift
        _MODE=".mode $1"
        shift
        ;;
    --column|--columns)
        shift
        # comma seperated list of column names
        _COLUMNS="$1"
        shift
        ;;
        -V|--verbose)   shift
            OPT_VERBOSE=1
            ;;
        --debug)        shift
            OPT_DEBUG=1
            OPT_VERBOSE=1
            ;;
        -h|--help)
            cat <<-!
            $0 Version: 0.0.0 Copyright (C) 2015 jkepler
            This program prints details of a movie. It allows fuzzy selection of title.
            Takes one optional argument which is pattern to filter list of movies.
            Since year is not taken into account, will show multiple records for Titanic or Casablanca etc.
!
            # no shifting needed here, we'll quit!
            exit
            ;;
        *)
            echo "Error: Unknown option: $1" >&2   
            echo "Use -h or --help for usage" 1>&2
            exit 1
            ;;
    esac
done
PATT="$1"
cd /Volumes/Pacino/dziga_backup/rahul/Downloads/MOV/imdbdata/src
CRIT=$( cat ./titles.list | fzf --query="$1" -1 -0 )
[[ -z "$CRIT" ]] && { echo "Error: title blank." 1>&2; exit 1; }
SQLITE=$(brew --prefix sqlite)/bin/sqlite3
MYDATABASE="../imdb.sqlite"
MYCOL=title
MYTABLE=imdb
echo got $CRIT
if [[ ! -f "$MYDATABASE" ]]; then
    echo "File: $MYDATABASE not found"
    exit 1
fi
echo "select * from $MYTABLE where $MYCOL = ${CRIT};"
$SQLITE $MYDATABASE <<!
.mode line
.headers on
  select * from $MYTABLE where $MYCOL = "${CRIT}";
!
